`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 12.06.2025 23:36:34
// Design Name: 
// Module Name: alu
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module alu(
    input [3:0] A, B,
    input [2:0] ALU_Sel,
    output reg [3:0] ALU_Out,
    output reg CarryOut
);

  reg [4:0] temp;

  always @(*) begin
    case (ALU_Sel)
      3'b000: begin // Addition
        temp = A + B;
        ALU_Out = temp[3:0];
        CarryOut = temp[4];
      end
      3'b001: begin // Subtraction
        temp = A - B;
        ALU_Out = temp[3:0];
        CarryOut = temp[4];
      end
      3'b010: begin // AND
        ALU_Out = A & B;
        CarryOut = 0;
      end
      3'b011: begin // OR
        ALU_Out = A | B;
        CarryOut = 0;
      end
      3'b100: begin // XOR
        ALU_Out = A ^ B;
        CarryOut = 0;
      end
      3'b101: begin // NOT A
        ALU_Out = ~A;
        CarryOut = 0;
      end
      3'b110: begin // Increment A
        temp = A + 1;
        ALU_Out = temp[3:0];
        CarryOut = temp[4];
      end
      3'b111: begin // Decrement A
        temp = A - 1;
        ALU_Out = temp[3:0];
        CarryOut = temp[4];
      end
      default: begin
        ALU_Out = 4'b0000;
        CarryOut = 0;
      end
    endcase
  end
endmodule

